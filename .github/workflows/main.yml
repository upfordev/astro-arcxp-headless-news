name: Deploy Worker (per-branch)

on:
  push:
    branches:
      - "**" # Trigger on any branch

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Derive environment name from branch
        id: env
        run: |
          RAW_BRANCH="${GITHUB_REF##*/}"
          ENV_NAME=$(echo "$RAW_BRANCH" | tr '/' '-' | tr -cd '[:alnum:]-' | tr '[:upper:]' '[:lower:]')
          WORKER_NAME="${ENV_NAME}-workflow-test-app"
          echo "env_name=${ENV_NAME}" >> $GITHUB_OUTPUT
          echo "worker_name=${WORKER_NAME}" >> $GITHUB_OUTPUT

      - name: Patch wrangler.jsonc with dynamic env
        run: |
          ENV_NAME="${{ steps.env.outputs.env_name }}"
          WORKER_NAME="${{ steps.env.outputs.worker_name }}"
          echo "Deploying to environment: $ENV_NAME ($WORKER_NAME)"

          # Remove comments from JSONC to avoid jq parse errors
          grep -v '^\s*//' wrangler.jsonc > wrangler_clean.json

          # Inject new env block with dynamic name and main entrypoint
          jq ". + { env: { \"$ENV_NAME\": { \"name\": \"$WORKER_NAME\", \"main\": \"./dist/_worker.js/index.js\" } } }" wrangler_clean.json > wrangler.jsonc

      - name: Add Wrangler secrets
        env:
          ARC_ORG: ${{ secrets.ARC_ORG }}
          ARC_ENV: ${{ secrets.ARC_ENV }}
          ARC_DEVCENTER_TOKEN: ${{ secrets.ARC_DEVCENTER_TOKEN }}
        run: |
          ENV_NAME="${{ steps.env.outputs.env_name }}"

          echo "Setting secrets for environment: $ENV_NAME"

          echo "$ARC_ORG" | npx wrangler secret put ARC_ORG --env "$ENV_NAME"
          echo "$ARC_ENV" | npx wrangler secret put ARC_ENV --env "$ENV_NAME"
          echo "$ARC_DEVCENTER_TOKEN" | npx wrangler secret put ARC_DEVCENTER_TOKEN --env "$ENV_NAME"

      - name: Build project
        env:
          ARC_ORG: ${{ secrets.ARC_ORG }}
          ARC_ENV: ${{ secrets.ARC_ENV }}
          ARC_DEVCENTER_TOKEN: ${{ secrets.ARC_DEVCENTER_TOKEN }}
        run: npm run build

      - name: Verify worker entrypoint exists
        run: ls -l ./dist/_worker.js/index.js

      - name: Deploy to Cloudflare Workers
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: deploy --env ${{ steps.env.outputs.env_name }}
