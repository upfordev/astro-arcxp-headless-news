---
import { Image } from "astro:assets";
import type { ArcContentElement } from "../../services/articleService";

interface Props {
  element: ArcContentElement;
}

const { element } = Astro.props;

// Get image URL from the element
const imageUrl =
  element.url ||
  element.additional_properties?.original?.url ||
  element.additional_properties?.url ||
  "";
const caption =
  element.caption ||
  element.subtitle ||
  element.additional_properties?.caption ||
  element.additional_properties?.original?.caption ||
  element.promo_items?.basic?.caption ||
  "";
const alt =
  element.additional_properties?.alt_text || caption || "Article image";

// https://docs.astro.build/en/guides/environment-variables/
const isDev = import.meta.env.DEV;
function buildOptimizedImageUrl(src: string, width = 768, quality = 80) {
  // Figure out if I can get resizing working locally
  return isDev
    ? src
    : `/cdn-cgi/image/width=${width},quality=${quality}/${encodeURIComponent(src)}`;
}

// const rawUrl = cloudflareImage(imageUrl);
---

<div class="image-block mb-8">
  {
    imageUrl && (
      <div>
        {/* <Image
          src={imageUrl}
          alt={alt}
          inferSize={true}
          widths={[768]}
          sizes="768px"
          quality={80}
          class="w-full rounded-lg"
        /> */}

        <img
          src={buildOptimizedImageUrl(imageUrl)}
          alt="Optimized article image"
          width="768"
          loading="lazy"
          class="rounded-lg w-full"
        />

        {caption && (
          <div class="text-sm text-gray-500 mt-2 italic">{caption}</div>
        )}
      </div>
    )
  }
</div>
